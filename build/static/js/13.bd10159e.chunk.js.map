{"version":3,"sources":["pages/ContractDetection/component/Code.tsx","pages/ContractDetection/component/echartsShow.tsx","pages/homePage/index.tsx"],"names":["QRCodeDom","url","id","value","size","fgColor","style","margin","imageSettings","src","height","width","excavate","EchartsShow","data","useEffect","chartDom","document","getElementById","myChart","echarts","list","percentage","name","nameArray","map","item","color","i","length","push","itemStyle","normal","borderWidth","borderRadius","borderColor","label","show","labelLine","option","backgroundColor","tooltip","title","text","left","top","subtext","subtextStyle","fontSize","textStyle","fontFamily","fontWeight","legend","orient","right","LineHeight","itemHeight","itemWidth","toolbox","series","type","clockWise","radius","hoverAnimation","center","setOption","HomePage","history","useHistory","useState","FileValue","setFileValue","readSingleFile","e","file","target","files","console","log","reader","FileReader","onload","contents","result","readAsText","fileInput","addEventListener","removeEventListener","className","onClick"],"mappings":"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","file":"static/js/13.bd10159e.chunk.js","sourcesContent":["import React from 'react'\nimport QRCode from 'qrcode.react';\nexport default function QRCodeDom({ url }:{url:string}) {\n\n    return  <QRCode\n    id=\"qrCode\"\n    value={url}\n    size={88} // 二维码的大小\n    fgColor=\"#000000\" // 二维码的颜色\n    style={{ margin: 'auto' }}\n    imageSettings={{ // 二维码中间的logo图片\n        src: '',\n        height: 30,\n        width: 30,\n        excavate: false, // 中间图片所在的位置是否镂空\n    }}\n/>\n}","import React, { useEffect } from 'react'\nimport * as echarts from 'echarts';\n\nexport default function EchartsShow({ data, }:{data?:any}) {\n\n    useEffect(() => {\n        var chartDom = document.getElementById('echarts');\n        var myChart = chartDom && echarts.init(chartDom);\n        let list = [\n            {percentage: 20, name: \"Risky\", value: 20},\n            {percentage: 30, name: \"Attention\", value: 30},\n            {percentage: 50, name: \"Passed\", value: 50},\n            \n        ] \n        var nameArray = list.map(item=>{\n            // eslint-disable-next-line\n            return '\\t\\t\\t' + item.name + '\\t\\t\\t' + item.value +  '\\t\\t\\t' + item.percentage + '%'\n        })\n        var color=['#FFAE32',' #FF4C4C','#1DD6D0']\n        var data = [];\n        for (var i = 0; i < list.length; i++) {\n            data.push({\n                value: list[i].value,\n                // eslint-disable-next-line\n                name: '\\t\\t\\t' + list[i].name + '\\t\\t\\t' + list[i].value +  '\\t\\t\\t' + list[i].percentage + '%',\n                itemStyle: {\n                    normal: {\n                        borderWidth: 2,\n                        // shadowBlur: 5,\n                        borderRadius:8,\n                        borderColor:color[i],\n                        // shadowColor: color[i]\n                    }\n                }\n            }, {\n                value: 1,\n                name: '',\n                itemStyle: {\n                    normal: {\n                        label: {\n                            show: false\n                        },\n                        labelLine: {\n                            show: false\n                        },\n                        color: 'rgba(0, 0, 0, 0)',\n                        borderColor: 'rgba(0, 0, 0, 0)',\n                        borderWidth: 0\n                    }\n                }\n            });\n        }\n        var option = {\n            backgroundColor:\"rgba(255,255,255,0)\",\n            color : color,\n            tooltip: {\n                show: false\n            },\n            title: {\n                text: '300 ',\n                left: '14%',\n                top: '35%',\n                subtext:'Total item',\n                subtextStyle:{\n                    fontSize: \"14px\",\n                },\n                textStyle: {\n                    color: '#ffffff',\n                    fontSize: \"34px\",\n                    fontFamily: \"Poppins-SemiBold, Poppins\",\n                    fontWeight:\"600\"\n                }\n            },\n            legend: [{\n                orient: 'vertical',\n                data:nameArray,\n                // left: 'right',\n                // top: 'center',\n                // align: 'left',\n                // itemGap: 1,\n                right:10,\n                top: 'center',\n                textStyle: {\n                    color: '#fff',\n                    fontSize: \"16px\",\n                    fontFamily: \"Poppins-Regular, Poppins\",\n                    LineHeight:'50px'\n                },\n                //图例标记的图形高度\n                itemHeight: 16,\n                //图例标记的图形宽度\n                itemWidth: 16,\n            },\n            ],\n            toolbox: {\n                show: false\n            },\n            series: [{\n                name: '',\n                type: 'pie',\n                clockWise: false,\n                radius: ['120%', '140%'],\n                // width:\"55%\",\n                // height:\"55%\",\n                hoverAnimation: true,\n                center: ['20%', '50%'],\n                top:\"center\",\n                itemStyle: {\n                    normal:{\n                        label: {\n                            show:false\n                        }\n                    }\n                },\n                data: data\n            }]\n        }; \n       ( option && myChart) && myChart.setOption(option);\n      return () => {\n        \n      }\n    }, [])\n    \n\n\n\n    return  <div id=\"echarts\" style={{width:'555px',height:'250px'}}></div>\n}","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport QRCodeDom from '../ContractDetection/component/Code';\nimport EchartsShow from '../ContractDetection/component/echartsShow';\nimport { StyleCode } from '../ContractDetection/component/StyleCode';\n\nexport default function HomePage(): JSX.Element{\n  const history = useHistory()\n\n  const [FileValue, setFileValue] = useState('')\n\n\n\n  function readSingleFile(e: any) {\n      var file = e.target.files[0];\n      console.log(file, 'file');\n\n      if (!file) { return; }\n      var reader = new FileReader();\n      reader.onload = function (e: any) {\n          var contents = e.target.result;\n          setFileValue(contents)\n      };\n      reader.readAsText(file, \"utf-8\");\n  }\n\n  useEffect(() => {\n      var fileInput = document.getElementById(\"file-input\");\n      fileInput && fileInput.addEventListener(\"change\", readSingleFile, false);\n      return () => {\n          fileInput && fileInput.removeEventListener(\"change\", readSingleFile, false);\n      }\n  }, [FileValue])\n\n\n\n\n\n  return <div className=\"homePage\">\n\n    <h1 style={{color:'#fff',margin:'100px'}} onClick={()=>{\n      history.push('/contract_detection')\n    }}>homePage To Detect</h1>\n\n\n<input type=\"file\" id='file-input' />\n            {\n                FileValue !== '' && <StyleCode value={FileValue}></StyleCode>\n            }\n            <QRCodeDom url='http://164.52.93.82:8002/#/'/>\n           <EchartsShow/>\n\n  </div>\n}"],"sourceRoot":""}