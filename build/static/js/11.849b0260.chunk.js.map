{"version":3,"sources":["pages/ContractDetection/component/ErrModel.tsx","pages/ContractDetection/index.tsx"],"names":["ErrModel","isOpen","onDismiss","errorMsg","minWidth","maxWidth","minHeight","className","onClick","contrastRegex","RegExp","ContractDetection","timer1","account","useActiveWeb3React","toggleWalletModal","useWalletModalToggle","history","useHistory","useState","currIndex","setcurrIndex","AddressContract","setAddressContract","selectChain","setselectChain","contrastErrText","setcontrastErrText","ErrOpen","setErrOpen","seterrorMsg","detectIng","setdetectIng","TotalTest","setTotalTest","Testing","setTesting","overTimer","setoverTimer","detectContrast","push","testAddress","type","newParams","params","token_address","chain","localStorage","getItem","user_address","getDetectAddressSubmit","then","res","code","data","msg","JSON","stringify","setTimeout","id","clearTimeout","styleButton","useMemo","rst","text","event","disabled","GetTestStatusStart","useCallback","timer2","getTestStatus","status","address","setItem","reParams","test","PageStart","useEffect","getListsTotal","total","catch","e","console","log","src","AddressIcon","alt","window","open","leftShowPic","rightShowPic"],"mappings":"yHAAA,wEAMe,SAASA,EAAT,GAQT,IAPFC,EAOC,EAPDA,OACAC,EAMC,EANDA,UACAC,EAKC,EALDA,SAMA,OACI,kBAAC,IAAD,CAASF,OAAQA,EAAQG,SAAU,IAAKC,SAAU,IAAKH,UAAWA,EAAWI,UAAW,KACpF,kBAAC,IAAD,KACI,yBAAKC,UAAU,UAAf,UACA,yBAAKA,UAAU,QAAQJ,GACvB,yBAAKI,UAAU,SAASC,QAAS,WAC/BN,MADF,U,sQCiBVO,EAAgBC,OAAO,uBAmDd,SAASC,IACtB,IAoBIC,EApBIC,EAAYC,cAAZD,QACFE,EAAoBC,cACpBC,EAAUC,cAEhB,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEA,EAAsCJ,mBAAS,OAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiB2B,EAAjB,KAEA,EAAkCX,oBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KAEA,EAAkCb,mBAAS,GAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KAEA,EAA8Bf,oBAAS,GAAvC,mBAAOgB,EAAP,KAAgBC,GAAhB,KAEA,GAAkCjB,oBAAS,GAA3C,qBAAOkB,GAAP,MAAkBC,GAAlB,MAkBMC,GAAiB,WACrBtB,EAAQuB,KAAK,6BAGTC,GAAc,SAAdA,EAAeC,EAAeC,GAClC,IAAMC,EAAS,CACbC,cAAevB,EACfwB,MAAOC,aAAaC,QAAQ,SAC5BC,aAAcpC,GAEhBqC,YAAgC,IAATR,EAAaC,EAAYC,GAAQO,MAAK,SAACC,GAC5D,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IACpB,GAAa,MAATF,EACF,GAA6B,OAAzBG,KAAKC,UAAUH,GACjB1C,EAAS8C,YAAW,WAClBjB,MACC,SACE,CACL,IAAQkB,EAAOL,EAAPK,GAERC,uBAAahD,GACb8C,YAAW,WACTtB,IAAW,GACXJ,GAAa,GACbf,EAAQuB,KAAR,8BAAoCmB,MACnC,UAGL9B,GAAW,GACXC,EAAYyB,OAeZM,GAAuBC,mBAAQ,WACnC,IAAMC,EAAe,CACnBC,KAAM,kBACNC,MAAO,iBAAO,IACdC,UAAU,GAEZ,OAAKrD,EASDkB,GACFgC,EAAIC,KACF,oCACE,kBAAC,IAAD,MADF,YAGE,kBAAC,IAAD,OAGGD,GAEL1B,IACF0B,EAAIC,KAAO,iCACJD,GAEF,CACLC,KAAM,kBACNC,MAAO,WACL1B,MAEF2B,UAAU,IA3BVH,EAAIC,KAAO,iBACXD,EAAIG,UAAW,EACfH,EAAIE,MAAQ,WACVlD,KAEKgD,KAyBR,CACDlD,EACAE,EACAwB,GACAnB,EACAW,EACAjB,IACAuB,GACAb,EAEAuB,aAAaC,QAAQ,SACrB1B,IAsBI6C,GAAqBC,uBACzB,WACE,IAAIC,EAECxD,GAELyD,YAAc,CAAErB,aAAcpC,IAAWsC,MAAK,SAACC,GAC7C,GAAiB,MAAbA,EAAIC,KAAc,CACpB,IAAQC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IAMd,GAJoB,MAAhBD,EAAKiB,SACP1C,GAAW,GACXC,EAAYyB,IAEM,MAAhBD,EAAKiB,OAAgB,CACvBhD,EAAmB+B,EAAKkB,SACxBzB,aAAa0B,QAAQ,QAASnB,EAAKR,OACnCrB,EAAe6B,EAAKR,OACpBV,IAAW,GACX,IAAMsC,EAAW,CACf7B,cAAeS,EAAKkB,QACpB1B,MAAOQ,EAAKR,MACZG,aAAcpC,GAEhBwD,EAASX,YAAW,WAClBjB,GAAY,EAAGiC,KACd,KAEe,MAAhBpB,EAAKiB,SACPnC,IAAW,GACXJ,GAAa,GACb4B,uBAAaS,GACT5D,EAAckE,KAAKrD,IACrBmB,WAIJZ,GAAW,GACXC,EAAYsB,EAAIG,UAKtB,CAACjC,EAAiBT,EAASW,IAIvBoD,GAAYR,uBAChB,WACEvC,GAAW,GACXC,EAAY,IACZH,EAAmB,IACnBN,EAAa,GACbE,EAAmB,IAEnBe,IAAa,GACbS,aAAa0B,QAAQ,oBAAqB,WAG5C,CAAC5D,IAiBH,OAdAgE,qBAAU,WAMR,OALA9B,aAAa0B,QAAQ,QAAS,OA5E9BK,cACG3B,MAAK,SAACC,GACL,GAAIA,EAAIE,KAAM,CACZ,IAAQyB,EAAU3B,EAAIE,KAAdyB,MACR7C,EAAa6C,OAGhBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAG,YAsEnBL,KACAT,KAEO,WACDvD,GACFgD,uBAAahD,MAIhB,CAACC,IAGF,kBAAC,IAAD,CAAcN,UAAU,qBAEtB,yBAAKA,UAAU,iBAEb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAUA,UAAU,cAClB,yBAAKA,UAAU,SAAf,wBAEE,gCAEF,yBAAKA,UAAU,QAAf,8EAIC4B,EACC,kBAAC,IAAD,KACGE,GACC,oCACE,yBAAK9B,UAAU,YACf,yBAAKA,UAAU,QAAf,mCAGF,oCACE,yBAAKA,UAAU,YACf,yBAAKA,UAAU,QAAf,qBAKN,yBAAKA,UAAU,cAUb,yBAAKA,UAAU,YAEb,yBAAK6E,IAAKC,IAAaC,IAAI,KAAM,IACjC,+CAAqBzE,IAEvB,yBAAKN,UAAU,OAAOmB,KAIxBS,GACA,kBAAC,IAAD,CAAa3B,QAASqD,GAAYI,OAC/BJ,GAAYG,QAKrB,kBAAC,IAAD,KAKE,6BACE,yBAAKzD,UAAU,OAAf,KACA,yBAAKA,UAAU,UAAf,4BAGF,6BACE,yBAAKA,UAAU,OAAf,SACA,yBAAKA,UAAU,UAAf,kCAEF,6BACE,yBAAKA,UAAU,OAAO0B,GAAa,KAAnC,MACA,yBAAK1B,UAAU,UAAf,oBAKN,kBAAC,IAAD,KACE,yBAAKA,UAAU,OAAf,yBACA,yBAAKA,UAAU,SAAf,6EAIA,yBACEA,UAAU,KACVC,QAAS,WACP+E,OAAOC,KAAK,mDAHhB,OASF,kBAAC,IAAD,KACE,yBAAKjF,UAAU,QACb,yBAAK6E,IAAKK,IAAaH,IAAI,MAE7B,yBAAK/E,UAAU,SACb,yBAAK6E,IAAKM,IAAcJ,IAAI,OAGhC,kBAAC,IAAD,CACErF,OAAQ2B,EACR1B,UAjQc,WAClB2B,GAAW,GACXC,EAAY,IACZH,EAAmB,IACnBJ,EAAmB,IACnBS,GAAa,GACbI,IAAW,IA4PPjC,SAAUA","file":"static/js/11.849b0260.chunk.js","sourcesContent":["import React from 'react'\nimport PcModal from \"../../../components/Modal/PcModal\"\nimport { ErrWraper } from '../styled'\n\n\n\nexport default function ErrModel({\n    isOpen,\n    onDismiss,\n    errorMsg,\n  }:  {\n    isOpen:boolean,\n    onDismiss:()=>void,\n    errorMsg:string\n  }) {\n    return (\n        <PcModal isOpen={isOpen} minWidth={384} maxWidth={384} onDismiss={onDismiss} minHeight={214}>\n            <ErrWraper>\n                <div className='notice'>Notice</div>\n                <div className=\"info\">{errorMsg}</div>\n                <div className=\"button\" onClick={()=>{\n                  onDismiss()\n                }}>OK</div>\n            </ErrWraper>\n        </PcModal>\n    )\n  }","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n// import ethPic from '../../assets/images/tokenDetec/ethPic@2x.png'\n// import bscPic from '../../assets/images/tokenDetec/bscPic@2x.png'\n// // import tronPic from '../../assets/images/tokenDetec/avaPic@2x.png'\n// import polyPic from '../../assets/images/tokenDetec/polyPic@2x.png'\n// import avaPic from '../../assets/images/tokenDetec/tronPic@2x.png'\n// import optimismPic from '../../assets/images/tokenDetec/optimismPic.png'\n\nimport ErrModel from \"./component/ErrModel\";\nimport leftShowPic from \"../../assets/images/tokenDetec/leftShowPic.png\";\nimport rightShowPic from \"../../assets/images/tokenDetec/rightShowPic.png\";\nimport AddressIcon from \"../../assets/images/address_icon.png\";\nimport \"./antd.scss\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useWalletModalToggle } from \"../../state/application/hooks\";\nimport {\n  BottomDiv,\n  ComingDiv,\n  ContainerCon,\n  IntroDiv,\n  ShowDecting,\n  StyleButton,\n  WidthDiv,\n} from \"./styled\";\n// import { Select } from 'antd';\nimport { useHistory } from \"react-router-dom\";\nimport {\n  getDetectAddressSubmit,\n  getListsTotal,\n  getTestStatus,\n} from \"../../utils/fetch/detect\";\nimport { Dots, SmallLoading } from \"../../components/styleds\";\nimport { clearTimeout } from \"timers\";\n// const { Option } = Select;\n\n// const inputRegex = RegExp(/^\\d+\\.?(\\d{1})?$/)\n// const inputRegex = RegExp(/^[a-zA-Z\\d]+$/)\nconst contrastRegex = RegExp(/^0x[a-fA-F0-9]{40}$/);\n// function Input({\n//     value,\n//     onUserInput,\n//     placeholder,\n//     ShowRed,\n//     setcontrastErrText,\n//     ...rest\n// }: {\n//     value: string | number\n//     onUserInput: (input: string) => void\n//     setcontrastErrText: (e: any) => void\n//     error?: boolean\n//     ShowRed?: boolean\n//     placeholder?: string\n// } & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n\n//     const enforcer = (nextUserInput: string) => {\n//         if (inputRegex.test(nextUserInput) || !nextUserInput) {\n//             onUserInput(nextUserInput)\n//         }\n//     }\n//     const testInput = (e: any) => {\n//         if (contrastRegex.test(e.target.value)) {\n//             setcontrastErrText('')\n//         } else {\n//             setcontrastErrText('Notice：Address is validated incorrectly')\n//         }\n//     }\n\n//     return (\n//         <StyledInput\n//             {...rest}\n//             value={value}\n//             onChange={event => enforcer(event.target.value)}\n//             autoComplete=\"off\"\n//             autoCorrect=\"off\"\n//             type=\"text\"\n//             ShowRed={ShowRed}\n//             placeholder={placeholder || ''}\n//             onBlur={event => testInput(event)}\n//         />\n\n//     )\n// }\n\ninterface BtnProp {\n  disabled: boolean;\n  text: JSX.Element | string;\n  event?: () => void;\n}\nexport default function ContractDetection(): JSX.Element {\n  const { account } = useActiveWeb3React();\n  const toggleWalletModal = useWalletModalToggle();\n  const history = useHistory();\n\n  const [currIndex, setcurrIndex] = useState(0);\n  const [AddressContract, setAddressContract] = useState(\"\");\n\n  const [selectChain, setselectChain] = useState(\"BSC\");\n\n  const [contrastErrText, setcontrastErrText] = useState(\"\");\n  const [ErrOpen, setErrOpen] = useState(false);\n  const [errorMsg, seterrorMsg] = useState(\"\");\n\n  const [detectIng, setdetectIng] = useState(false);\n\n  const [TotalTest, setTotalTest] = useState(0);\n\n  const [Testing, setTesting] = useState(false);\n  // const [TakeResultAllTime, setTakeResultAllTime] = useState(false)\n  const [overTimer, setoverTimer] = useState(false);\n  let timer1: any;\n\n  //合约地址检测\n  // const detectContrast = useCallback(\n  //     () => {\n\n  //         if (!contrastRegex.test(AddressContract)) {\n  //             setcontrastErrText('Notice：Address is validated incorrectly')\n  //         } else {\n  //             setcontrastErrText('')\n  //             setdetectIng(true)\n  //             GetTestStatusStart()\n  //         }\n  //     },\n  //     // eslint-disable-next-line\n  //     [AddressContract, history, account, selectChain, localStorage.getItem('chain')],\n  // )\n  const detectContrast = () => {\n    history.push(\"/wallet_detection/detail\");\n  };\n  //token检测\n  const testAddress = (type?: number, newParams?: any) => {\n    const params = {\n      token_address: AddressContract,\n      chain: localStorage.getItem(\"chain\"),\n      user_address: account,\n    };\n    getDetectAddressSubmit(type === 1 ? newParams : params).then((res: any) => {\n      const { code, data, msg } = res;\n      if (code === 200) {\n        if (JSON.stringify(data) === \"{}\") {\n          timer1 = setTimeout(() => {\n            testAddress();\n          }, 3000);\n        } else {\n          const { id } = data;\n\n          clearTimeout(timer1);\n          setTimeout(() => {\n            setTesting(false);\n            setdetectIng(false);\n            history.push(`/contract_detection/${id}`);\n          }, 1000);\n        }\n      } else {\n        setErrOpen(true);\n        seterrorMsg(msg);\n      }\n    });\n  };\n\n  //关闭错误弹框\n  const closeErrTip = () => {\n    setErrOpen(false);\n    seterrorMsg(\"\");\n    setcontrastErrText(\"\");\n    setAddressContract(\"\");\n    setdetectIng(false);\n    setTesting(false);\n  };\n\n  const styleButton: BtnProp = useMemo(() => {\n    const rst: BtnProp = {\n      text: \"Start detection\",\n      event: () => ({}),\n      disabled: true,\n    };\n    if (!account) {\n      rst.text = \"Connect Wallet\";\n      rst.disabled = false;\n      rst.event = () => {\n        toggleWalletModal();\n      };\n      return rst;\n    }\n\n    if (detectIng) {\n      rst.text = (\n        <>\n          <SmallLoading />\n          Detecting\n          <Dots />\n        </>\n      );\n      return rst;\n    }\n    if (overTimer) {\n      rst.text = \"Too many requests, please wait\";\n      return rst;\n    }\n    return {\n      text: \"Start detection\",\n      event: () => {\n        detectContrast();\n      },\n      disabled: false,\n    };\n    // eslint-disable-next-line\n  }, [\n    account,\n    toggleWalletModal,\n    detectContrast,\n    currIndex,\n    detectIng,\n    useActiveWeb3React,\n    overTimer,\n    selectChain,\n    // eslint-disable-next-line\n    localStorage.getItem(\"chain\"),\n    AddressContract,\n  ]);\n  // const handleChange = (value: any) => {\n  //     setselectChain(value)\n  //     localStorage.setItem('chain', value)\n  // }\n\n  //检测总数\n  const handleListTotal = () => {\n    getListsTotal()\n      .then((res) => {\n        if (res.data) {\n          const { total } = res.data;\n          setTotalTest(total);\n        }\n      })\n      .catch((e) => {\n        console.log(e, \"wrong\");\n      });\n  };\n\n  //查询检测状态 0 （可以继续检测）1（当前正在检测）2（检测上限）\n  const GetTestStatusStart = useCallback(\n    () => {\n      let timer2: any;\n\n      if (!account) return;\n\n      getTestStatus({ user_address: account }).then((res: any) => {\n        if (res.code === 200) {\n          const { data, msg } = res;\n\n          if (data.status === \"2\") {\n            setErrOpen(true);\n            seterrorMsg(msg);\n          }\n          if (data.status === \"1\") {\n            setAddressContract(data.address);\n            localStorage.setItem(\"chain\", data.chain);\n            setselectChain(data.chain);\n            setTesting(true);\n            const reParams = {\n              token_address: data.address,\n              chain: data.chain,\n              user_address: account,\n            };\n            timer2 = setTimeout(() => {\n              testAddress(1, reParams);\n            }, 3000);\n          }\n          if (data.status === \"0\") {\n            setTesting(false);\n            setdetectIng(false);\n            clearTimeout(timer2);\n            if (contrastRegex.test(AddressContract)) {\n              testAddress();\n            }\n          }\n        } else {\n          setErrOpen(true);\n          seterrorMsg(res.msg);\n        }\n      });\n    },\n    // eslint-disable-next-line\n    [AddressContract, account, selectChain]\n  );\n\n  //初始化\n  const PageStart = useCallback(\n    () => {\n      setErrOpen(false);\n      seterrorMsg(\"\");\n      setcontrastErrText(\"\");\n      setcurrIndex(0);\n      setAddressContract(\"\");\n      // setTakeResultAllTime(false)\n      setoverTimer(false);\n      localStorage.setItem(\"TakeResultAllTime\", \"false\");\n    },\n    // eslint-disable-next-line\n    [account]\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"chain\", \"BSC\");\n    handleListTotal();\n    PageStart();\n    GetTestStatusStart();\n    // eslint-disable-next-line\n    return () => {\n      if (timer1) {\n        clearTimeout(timer1);\n      }\n    };\n    // eslint-disable-next-line\n  }, [account]);\n\n  return (\n    <ContainerCon className=\"ContractDetection\">\n      {/* 合约检测入口 */}\n      <div className=\"homeContainer\">\n        {/* 内容区域 */}\n        <div className=\"container\">\n          <WidthDiv className=\"ContracDec\">\n            <div className=\"title\">\n              Address Security Scan\n              <span></span>\n            </div>\n            <div className=\"tabs\">\n              Conduct a comprehensive scan of your address for security\n              vulnerabilities.\n            </div>\n            {Testing ? (\n              <ShowDecting>\n                {overTimer ? (\n                  <>\n                    <div className=\"loading\"></div>\n                    <div className=\"text\">Too many requests, please wait</div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"loading\"></div>\n                    <div className=\"text\">Detecting…</div>\n                  </>\n                )}\n              </ShowDecting>\n            ) : (\n              <div className=\"addreccCon\">\n                {/* <div className=\"select\">\n                                <Select defaultValue=\"BSC\" onChange={handleChange} dropdownClassName='dropCon' showArrow >\n                                    <Option value=\"BSC\">  <img src={bscPic} alt=\"\" /> BSC</Option>\n                                    <Option value=\"ETH\">  <img src={ethPic} alt=\"\" /> ETH</Option>\n                                    <Option value=\"Optimism\">  <img src={optimismPic} alt=\"\" /> Optimism</Option>\n                                    <Option value=\"Polygon\">  <img src={polyPic} alt=\"\" /> Polygon</Option>\n                                    <Option value=\"Avalanche\">  <img src={avaPic} alt=\"\" /> Avalanche</Option>\n                                </Select>\n                            </div> */}\n                <div className=\"inputCon\">\n                  {/* <Input value={AddressContract} onUserInput={val => setAddressContract(val)} placeholder='Please enter the Token address' ShowRed={contrastErrText === '' || AddressContract === ''} setcontrastErrText={setcontrastErrText} ></Input> */}\n                  <img src={AddressIcon} alt=\"\" />{\" \"}\n                  <span>Your address: {account}</span>\n                </div>\n                <div className=\"err\">{contrastErrText}</div>\n              </div>\n            )}\n\n            {!Testing && (\n              <StyleButton onClick={styleButton.event}>\n                {styleButton.text}\n              </StyleButton>\n            )}\n          </WidthDiv>\n        </div>\n        <IntroDiv>\n          {/* <div>\n                <div className=\"top\">4</div>\n                <div className=\"bottom\">Engines</div>\n            </div> */}\n          <div>\n            <div className=\"top\">5</div>\n            <div className=\"bottom\">Public Chains Supported</div>\n          </div>\n\n          <div>\n            <div className=\"top\">119K+</div>\n            <div className=\"bottom\">Malicious Contracts Collected</div>\n          </div>\n          <div>\n            <div className=\"top\">{TotalTest || \"--\"} +</div>\n            <div className=\"bottom\">Scan Adresses</div>\n          </div>\n        </IntroDiv>\n      </div>\n\n      <ComingDiv>\n        <div className=\"tit\">Address security scan</div>\n        <div className=\"intro\">\n          Conduct a comprehensive scan of your address for security\n          vulnerabilities\n        </div>\n        <div\n          className=\"go\"\n          onClick={() => {\n            window.open(\"https://www.triathon.space/tokenDetections/#/\");\n          }}\n        >\n          Go\n        </div>\n      </ComingDiv>\n      <BottomDiv>\n        <div className=\"left\">\n          <img src={leftShowPic} alt=\"\" />\n        </div>\n        <div className=\"right\">\n          <img src={rightShowPic} alt=\"\" />\n        </div>\n      </BottomDiv>\n      <ErrModel\n        isOpen={ErrOpen}\n        onDismiss={closeErrTip}\n        errorMsg={errorMsg}\n      ></ErrModel>\n    </ContainerCon>\n  );\n}\n"],"sourceRoot":""}