{"version":3,"sources":["pages/ContractDetection/component/echartsShow.tsx","components/Tips/index.tsx","pages/ContractDetection/component/Code.tsx","pages/ContractDetection/component/ContractDetectionDetail.tsx","pages/ContractDetection/component/useCallbackState.jsx"],"names":["EchartsShow","echdata","useEffect","chartDom","document","getElementById","myChart","echarts","nameArray","map","item","type","count","Number","ratio","toFixed","color","data","Total","length","i","push","value","name","itemStyle","normal","borderWidth","borderRadius","borderColor","label","show","labelLine","option","backgroundColor","tooltip","title","text","left","top","subtext","subtextStyle","fontSize","textStyle","fontFamily","fontWeight","legend","orient","right","LineHeight","itemHeight","itemWidth","toolbox","series","clockWise","radius","hoverAnimation","center","setOption","id","style","width","height","ShowTips","styled","div","CopyShowTips","src","Succes","marginRight","alt","QRCodeDom","url","size","fgColor","margin","imageSettings","excavate","CopyShowTipsSmall","account","useCopyClipboard","isCopied","setCopied","hasCopyed","copy","onClick","className","ShowText","ContractDetectionDetail","params","history","useHistory","useState","ShowShareDrop","setShowShareDrop","state","cbRef","useRef","setData","current","val","callback","useCallbackState","isShare","setIsShare","isOpen","setisOpen","chain","contract_address","score","time","user","IntroInfo","setIntroInfo","ResultDetail","setResultDetail","echartDate","setechartDate","getTestResult","then","res","list","result","score_ratio","getReportDetail","match","window","open","shareTwitter","el","imgHeight","offsetHeight","imgWidth","offsetWidth","scale","devicePixelRatio","html2canvas","canvas","saveUrl","toDataURL","a","createElement","body","appendChild","href","download","click","bscPic","ethPic","slice","index","key","level","high","mid","low","description","PcModal","minWidth","onDismiss","minHeight"],"mappings":"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","file":"static/js/13.99c0c27b.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport * as echarts from 'echarts';\ninterface Echartechdata {\n    type: string;\n    count: number;\n    ratio: string;\n}\nexport default function EchartsShow({ echdata, }:{echdata:Echartechdata[]}) {\n   \n    useEffect(() => {\n        var chartDom = document.getElementById('echarts');\n        var myChart = chartDom && echarts.init(chartDom);\n        // let echdata = [\n        //     {percentage: 20, name: \"Risky\", value: 20},\n        //     {percentage: 30, name: \"Attention\", value: 30},\n        //     {percentage: 50, name: \"Passed\", value: 50},\n            \n        // ] \n        var nameArray = echdata.map(item=>{\n            // eslint-disable-next-line\n            return '\\t\\t\\t' + item.type + '\\t\\t\\t' + item.count +  '\\t\\t\\t' + Number(Number(item.ratio)*100).toFixed(2) + '%'\n        })\n        var color=['#FF4C4C','#FFAE32','#1DD6D0']\n        var data = [];\n        var Total =  echdata.length!==0 ? echdata[0].count + echdata[1].count + echdata[2].count :0\n        for (var i = 0; i < echdata.length; i++) {\n            data.push({\n                value: echdata[i].count,\n                // eslint-disable-next-line \n                name: '\\t\\t\\t' + echdata[i].type + '\\t\\t\\t' + echdata[i].count +  '\\t\\t\\t' + Number(Number(echdata[i].ratio)*100).toFixed(2) + '%',\n                itemStyle: {\n                    normal: {\n                        borderWidth: 2,\n                        // shadowBlur: 5,\n                        borderRadius:8,\n                        borderColor:color[i],\n                        // shadowColor: color[i]\n                    }\n                }\n            }, {\n                value: 1,\n                name: '',\n                itemStyle: {\n                    normal: {\n                        label: {\n                            show: false\n                        },\n                        labelLine: {\n                            show: false\n                        },\n                        color: 'rgba(0, 0, 0, 0)',\n                        borderColor: 'rgba(0, 0, 0, 0)',\n                        borderWidth: 0\n                    }\n                }\n            });\n        }\n        var option = {\n            backgroundColor:\"rgba(255,255,255,0)\",\n            color : color,\n            tooltip: {\n                show: false\n            },\n            title: {\n                text: Total ,\n                left: '14%',\n                top: '35%',\n                subtext:'Total item',\n                subtextStyle:{\n                    fontSize: \"14px\",\n                },\n                textStyle: {\n                    color: '#ffffff',\n                    fontSize: \"34px\",\n                    fontFamily: \"Poppins-SemiBold, Poppins\",\n                    fontWeight:\"600\"\n                }\n            },\n            legend: [{\n                orient: 'vertical',\n                data:nameArray,\n                // left: 'right',\n                // top: 'center',\n                // align: 'left',\n                // itemGap: 1,\n                right:10,\n                top: 'center',\n                textStyle: {\n                    color: '#fff',\n                    fontSize: \"16px\",\n                    fontFamily: \"Poppins-Regular, Poppins\",\n                    LineHeight:'50px'\n                },\n                //图例标记的图形高度\n                itemHeight: 16,\n                //图例标记的图形宽度\n                itemWidth: 16,\n            },\n            ],\n            toolbox: {\n                show: false\n            },\n            series: [{\n                name: '',\n                type: 'pie',\n                clockWise: false,\n                radius: ['120%', '140%'],\n                // width:\"55%\",\n                // height:\"55%\",\n                hoverAnimation: true,\n                center: ['20%', '50%'],\n                top:\"center\",\n                itemStyle: {\n                    normal:{\n                        label: {\n                            show:false\n                        }\n                    }\n                },\n                data: data\n            }]\n        }; \n       ( option && myChart) && myChart.setOption(option);\n      return () => {\n        \n      }\n    }, [echdata])\n    \n\n\n\n    return  <div id=\"echarts\" style={{width:'555px',height:'250px'}}></div>\n}","import React from 'react'\nimport styled from 'styled-components'\nimport Succes from '../../assets/images/tips/success.svg'\n\nconst ShowTips = styled.div`\nposition: fixed;\n\nbottom: 20px;\nleft: 50%;\ntransform: translateX(-50%);\npadding: 10px 16px;\nfont-size: 16px;\nfont-family: Poppins-Regular, Poppins;\nfont-weight: 400;\ncolor: #111112;\nline-height: 25px;\nbackground: #ffffff;\nborder-radius: 8px;\ntext-align: center;\nz-index:9999;\nimg {\n  width: 18px;\n  height: 18px;\n}\n`\n\nexport default function CopyShowTips() {\n    return (\n      <ShowTips>\n        <img src={Succes} style={{ width: 24, height: 24, marginRight: 12 }} alt=\"\" />\n        Copy successful！\n      </ShowTips>\n    )\n  }","import React from 'react'\nimport QRCode from 'qrcode.react';\nexport default function QRCodeDom({ url }:{url:string}) {\n\n    return  <QRCode\n    id=\"qrCode\"\n    value={url}\n    size={88} // 二维码的大小\n    fgColor=\"#000000\" // 二维码的颜色\n    style={{ margin: 'auto' }}\n    imageSettings={{ // 二维码中间的logo图片\n        src: '',\n        height: 30,\n        width: 30,\n        excavate: false, // 中间图片所在的位置是否镂空\n    }}\n/>\n}","\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport html2canvas from \"html2canvas\";\n\nimport { CloseColor, ContractDetectionDetailDom, IntroTit, Items, ReportDetail, ReportDom, ShowShareDropCon, WrokContainer } from '../styled'\nimport EchartsShow from './echartsShow'\nimport { useCallbackState } from './useCallbackState';\nimport useCopyClipboard from '../../../hooks/useCopyClipboard';\nimport CopyShowTips from '../../../components/Tips';\nimport QRCodeDom from './Code';\nimport PcModal from '../../../components/Modal/PcModal';\nimport ethPic from '../../../assets/images/contrastDetec/ethPic.png'\nimport bscPic from '../../../assets/images/contrastDetec/bscPic.png'\nimport hasCopyed from '../../../assets/images/contrastDetec/hasCopyed.svg'\nimport copy from '../../../assets/images/contrastDetec/copy.svg'\n\nimport low from '../../../assets/images/contrastDetec/low@2x.png'\nimport high from '../../../assets/images/contrastDetec/mid@2x.png'\nimport mid from '../../../assets/images/contrastDetec/high@2x.png'\n\n\nimport { getTestResult } from '../../../utils/fetch/detect';\n\n\n\n\nfunction CopyShowTipsSmall({ account, }: { account: string }) {\n    const [isCopied, setCopied] = useCopyClipboard()\n    const openNotification = () => {\n        !isCopied && setCopied(account)\n    }\n    return (\n        <Items>\n            <img src={!isCopied ? copy : hasCopyed} alt=\"\" onClick={openNotification} />\n            {\n                isCopied && <div className=\"showCopyed\">Copied!</div>\n            }\n        </Items>\n    )\n}\n\ninterface InfoData {\n    chain: string,\n    contract_address: string,\n    score: string,\n    time: any,\n    user: string\n}\n\ninterface ResultDetailList {\n    id: number;\n    title: string;\n    level: string;\n    description: string;\n}\ninterface EchartList {\n    type: string;\n    count: number;\n    ratio: string;\n}\n\nconst ShowText = ['Significant Risk', 'High Risk', 'Medium Risk', 'Some Risk', 'Excellent']\n\nexport default function ContractDetectionDetail(params: any): JSX.Element {\n    const history = useHistory()\n\n    const [ShowShareDrop, setShowShareDrop] = useState(false)\n    const [isShare, setIsShare] = useCallbackState(false);\n    const [isCopied, setCopied] = useCopyClipboard()\n\n    const [isOpen, setisOpen] = useState(false)\n\n\n    const [IntroInfo, setIntroInfo] = useState({\n        chain: '', contract_address: '', score: '', time: '', user: ''\n    } as InfoData)\n    const [ResultDetail, setResultDetail] = useState([] as ResultDetailList[])\n    const [echartDate, setechartDate] = useState([] as EchartList[])\n\n    const shareTwitter = () => {\n        setShowShareDrop(false)\n        const toOpen = function (url: string) {\n            const option =\n                'toolbar=yes, location=yes, directories=no, status=no, menubar=yes, scrollbars=yes, resizable=no, copyhistory=yes, width=600, height=450,top=100,left=350'\n            window.open(url, '_blank', option)\n        }\n        const title = 'BSC  Detection (BSC  Detection, a technical insight into BSC)'\n        // const href = encodeURIComponent(document.location.href);\n        const href = 'https://www.triathon.space/contract_detection';\n\n        toOpen('https://twitter.com/share/?text=' + title + '&url=' + href)\n    }\n\n    const sharePic = () => {\n        setShowShareDrop(false)\n        setIsShare(true, function (data: any) {\n            const el: any = document.getElementById('pic');\n            let imgHeight = el.offsetHeight\n            let imgWidth = el.offsetWidth\n            let scale = window.devicePixelRatio\n            // el.scrollIntoView()\n            html2canvas(el, {\n                scale: scale,\n                width: imgWidth,\n                height: imgHeight\n            }).then((canvas: any) => {\n                let saveUrl = canvas.toDataURL('image/png')\n                let a = document.createElement('a')\n                document.body.appendChild(a)\n                a.href = saveUrl\n                a.download = 'report'\n                a.click()\n                setIsShare(false)\n            })\n\n        })\n    }\n\n\n    //报告详情\n    const getReportDetail = (id: any) => {\n        getTestResult({ id }).then(res => {\n            if (res.data) {\n                const { list, score_ratio: { result }, chain, contract_address, score, time, user } = res.data\n                const Info = {\n                    chain, contract_address, score, time, user\n                }\n                setIntroInfo(Info)\n                setResultDetail(list)\n                setechartDate(result)\n\n            }\n        })\n\n    }\n\n    useEffect(() => {\n\n        const { params: { id } } = params.match\n        getReportDetail(id)\n\n        return () => {\n\n        }\n    }, [params.match])\n\n\n\n\n    return <ContractDetectionDetailDom className='ContractDetectionDetail'>\n        <div className=\"container\">\n            <div className=\"title\">Triathon Contract Detection Report</div>\n            <div className=\"detect\" onClick={() => {\n                history.push('/contract_detection')\n            }}>Detect other contract</div>\n            <div className=\"text\">Notice : This detection is the basic item scan, please do not treat it as the final audit report.For the final report, please contact customer service for manual audit</div>\n            <ReportDom>\n                <div className={isShare ? 'SharereportShow' : 'reportShow'} id='pic' >\n                    {\n                        !isShare && <div className=\"reportLogo\"></div>\n                    }\n\n                    <IntroTit>Presented by Triathon\n                        {\n                            !isShare && <>\n                                <span className='Share' onClick={() => {\n                                    setShowShareDrop(!ShowShareDrop)\n                                }}></span>\n                                {\n                                    ShowShareDrop && <ShowShareDropCon>\n                                        <div className=\"item1\" onClick={() => { shareTwitter() }}>\n                                            <span></span>\n                                            Twitter\n                                        </div>\n                                        <div className=\"item2\" onClick={sharePic}>\n                                            <span></span>\n                                            Save picture\n                                        </div>\n                                        <div className=\"item3\" onClick={() => {\n                                            setCopied('https://www.triathon.space/#/ranking')\n                                            setShowShareDrop(false)\n                                        }}>\n                                            <span></span>\n                                            Copy link\n                                        </div>\n                                    </ShowShareDropCon>\n                                }\n                            </>\n                        }\n\n\n                    </IntroTit>\n                    <div className=\"present\">\n                        <div className=\"item\">\n                            <span>Detect User: </span>\n                            <span> {IntroInfo.user} </span>\n                        </div>\n                        <div className=\"item\">\n                            <span>Detect time: </span>\n                            <span> {IntroInfo.time} </span>\n                        </div>\n                    </div>\n                    <IntroTit>Contract Info</IntroTit>\n                    <div className=\"contractInfo\">\n                        <div className=\"item\">\n                            <span>Chain</span>\n                            <span><img src={IntroInfo.chain === 'bsc' ? bscPic : ethPic} alt=\"\" className='chainImg' />\n                                {\n                                    IntroInfo.chain === 'bsc' ? 'BSC' : 'ETH'\n                                }\n                            </span>\n                        </div>\n                        <div className=\"item\">\n                            <span>Contract Address</span>\n                            <span>\n                                {\n                                    IntroInfo.contract_address.length > 10 ? IntroInfo.contract_address.slice(0, 6) + '...' + IntroInfo.contract_address.slice(-6) : ''\n                                }\n\n\n                                <CopyShowTipsSmall account={IntroInfo.contract_address || 'none'} ></CopyShowTipsSmall>\n                            </span>\n                        </div>\n                    </div>\n                    <IntroTit>Security Detection Result</IntroTit>\n                    <div className=\"result\">\n                        <div className=\"left\">\n                            <div className=\"icon\"></div>\n                            <div className=\"text\">\n                                <div className=\"top\">\n                                    {\n                                        Number(IntroInfo.score) < 25 ? ShowText[0]\n                                            : Number(IntroInfo.score) < 50 ? ShowText[1]\n                                                : Number(IntroInfo.score) < 75 ? ShowText[2]\n                                                    : Number(IntroInfo.score) < 90 ? ShowText[3]\n                                                        : ShowText[4]\n                                    }\n                                </div>\n                                <div className=\"bottom\">\n                                    <span className='colorText'>\n                                        {IntroInfo.score}\n                                    </span>\n                                    <span >  / 100</span>\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            !isShare && <div className=\"right\" onClick={() => setisOpen(true)}>How it works?</div>\n                        }\n\n                    </div>\n                    <IntroTit>Distributed</IntroTit>\n                    <div className=\"distributed\">\n                        <EchartsShow  echdata={echartDate} />\n                    </div>\n                    {\n                        isShare && <div className=\"code\">\n                            <QRCodeDom url='http://164.52.93.82:8002/#/' />\n                        </div>\n                    }\n                </div>\n\n                <div className=\"reportDetail\">\n                    <IntroTit>Detail</IntroTit>\n                    <ReportDetail>\n                        {\n                            ResultDetail.map((item, index) => {\n                                return <div className=\"item\" key={index}>\n                                    <div className={item.level === 'High' ? 'titleIntro red' : item.level === 'Medium' ? 'titleIntro yellow' : 'titleIntro green'}> <img src={item.level === 'High' ? high : item.level === 'Medium' ? mid : low} alt=\"\" /> {item.title}</div>\n                                    <div className=\"intro\">{item.description}</div>\n                                </div>\n                            })\n                        }\n                    </ReportDetail>\n                </div>\n            </ReportDom>\n            {isCopied && <CopyShowTips />}\n        </div>\n        <PcModal isOpen={isOpen} minWidth={683} onDismiss={() => setisOpen(false)} minHeight={537}>\n            <WrokContainer>\n                <div className=\"header\">\n                    <div className=\"left\">How it work</div>\n                    <div className=\"close\" onClick={() => setisOpen(false)}>  <CloseColor></CloseColor>\n                    </div>\n                </div>\n                <div className=\"con\">\n                    <p> The Triathon platform backed by Core security detection engine.</p>\n                    <p>Core security testing platform incorporate the fuzzing-test testing method and the concept of chaos engineering (experimental) to redefine the way of blockchain security testing.</p>\n                    <div className=\"title\">Main utilities of “CORE”</div>\n                    <p>1. (Testing) Tool building: <br />A collection of various testing tools. Testing capabilities will be packaged in the form of API and be provided to third parties including security white hats in the future.</p>\n                    <p>2. API building: <br />CORE continuously converts vulnerabilities into testing methods and outputs APIs.</p>\n                    <p>3. Developer management:<br />Eco-developers mint new NFT (i. e. test service) based on API; or they can report vulnerabilities based on their use of the API application.</p>\n                    <p>4. Vulnerability conversion: <br />The vulnerability platform is a key component of CORE’s continuous capacity building.</p>\n                </div>\n            </WrokContainer>\n        </PcModal>\n    </ContractDetectionDetailDom>\n}\n\n\n\n\n\n\n","import {useEffect, useState, useRef} from \"react\";\n\n\nfunction useCallbackState (state) {\n    const cbRef = useRef();\n    const [data, setData] = useState(state);\n\n    useEffect(() => {\n        cbRef.current && cbRef.current(data);\n    }, [data]);\n\n    return [data, function (val, callback) {\n        cbRef.current = callback;\n        setData(val);\n    }];\n}\n\nexport {useCallbackState};"],"sourceRoot":""}