{"version":3,"sources":["pages/ContractDetection/component/ContractDetectionHistory.tsx"],"names":["ContractDetectionHistory","useState","TotalTest","setTotalTest","resultList","setresultList","history","useHistory","InputValue","setInputValue","getTestList","Params","page","pagesize","name","getHistoryLists","then","res","data","results","useEffect","getListsTotal","className","placeholder","value","onChange","e","target","changeValue","onClick","width","type","length","map","item","index","key","file_name","shortenAddress","contract_address","src","network","bscPic","ethPic","alt","score","Right","push","id"],"mappings":"4RAkBe,SAASA,IAEpB,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAGMC,EAAUC,cAChB,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAGOC,EAAc,WACjB,IAAMC,EAAS,CACXC,KAAK,EACLC,SAAS,IACTC,KAAKN,GAETO,YAAgBJ,GAAQK,MAAK,SAAAC,GACzB,GAAGA,EAAIC,KAAK,CACR,IAAQC,EAAYF,EAAIC,KAAhBC,QACRd,EAAcc,QA2B1B,OAVAC,qBAAU,WAGR,OAFEV,IAZAW,cAAgBL,MAAK,SAAAC,GACdA,EAAIC,MACHf,EAAac,EAAIC,SAYpB,eAIN,IAGI,kBAAC,IAAD,KACH,yBAAKI,UAAU,SAAf,sCACA,yBAAKA,UAAU,aAAapB,EAA5B,aACA,kBAAC,IAAD,KACI,yBAAKoB,UAAU,SACf,kBAAC,IAAD,CAAUC,YAAY,SAASC,MAAOhB,EAAYiB,SAAU,SAACC,GAAD,OAnBhD,SAACA,GACjBjB,EAAciB,EAAEC,OAAOH,OAkBkDI,CAAYF,MACjF,yBAAKJ,UAAU,SAASO,QAAS,kBAAInB,MAArC,WAGJ,yBAAKY,UAAU,WACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAASQ,MAAM,OAAOC,KAAM,GAA5B,KACA,kBAAC,IAAD,CAASD,MAAM,QAAQC,KAAM,GAA7B,QACA,kBAAC,IAAD,CAASD,MAAM,QAAQC,KAAM,GAA7B,oBACA,kBAAC,IAAD,CAASD,MAAM,QAAQC,KAAM,GAA7B,SACA,kBAAC,IAAD,CAASD,MAAM,QAAQC,KAAM,GAA7B,gBACA,kBAAC,IAAD,CAASD,MAAM,QAAQC,KAAM,GAA7B,cAEJ,yBAAKT,UAAU,aAEa,IAApBlB,EAAW4B,OAAa5B,EAAW6B,KAAI,SAACC,EAAMC,GAC1C,OAAO,yBAAKb,UAAU,YAAYc,IAAKD,GACnC,kBAAC,IAAD,CAASL,MAAM,OAAOC,KAAM,GAAKI,EAAM,GACvC,kBAAC,IAAD,CAASL,MAAM,QAAQC,KAAM,GAAIG,EAAKG,WACtC,kBAAC,IAAD,CAASP,MAAM,QAAQC,KAAM,GAAKO,YAAeJ,EAAKK,mBACtD,kBAAC,IAAD,CAAST,MAAM,QAAQC,KAAM,GAA7B,IAAiC,yBAAKS,IAAoB,QAAfN,EAAKO,QAAgBC,IAAOC,IAAQC,IAAI,GAAGtB,UAAU,aAAhG,IAA8GY,EAAKO,SACnH,kBAAC,IAAD,CAASX,MAAM,QAAQC,KAAM,GAAIG,EAAKW,OAAS,GAC/C,kBAAC,IAAD,CAASf,MAAM,QAAQC,KAAM,GACzB,yBAAKS,IAAKM,IAAOF,IAAI,GAAGtB,UAAU,aAAaO,QAAS,WACpDvB,EAAQyC,KAAR,8BAAoCb,EAAKc,aAKrD,yBAAK1B,UAAU,SAAf,gBAMQ,IAApBlB,EAAW4B,QAAc,yBAAKV,UAAU,eAAf","file":"static/js/15.bb653445.chunk.js","sourcesContent":["\nimport React, { useEffect, useState } from 'react'\nimport { HistoryDom, InputCon, ItemDiv, SearchDom } from '../styled'\nimport Right from '../../../assets/images/contrastDetec/right@2x.png'\nimport ethPic from '../../../assets/images/contrastDetec/ethPic.png'\nimport bscPic from '../../../assets/images/contrastDetec/bscPic.png'\nimport { getHistoryLists, getListsTotal } from '../../../utils/fetch/detect'\nimport { shortenAddress } from '../../../utils'\nimport { useHistory } from 'react-router-dom'\n\ninterface ResultList {\n  id: number;\n  file_name: string;\n  contract_address: string;\n  network: string;\n  score?: any;\n}\n\nexport default function ContractDetectionHistory(): JSX.Element {\n\n    const [TotalTest, setTotalTest] = useState(0)\n    const [resultList, setresultList] = useState([] as ResultList[])\n\n \n    const history = useHistory()\n    const [InputValue, setInputValue] = useState('')\n\n     //历史记录\n     const getTestList = ()=>{\n        const Params = {\n            page:1,\n            pagesize:100,\n            name:InputValue\n        }\n        getHistoryLists(Params).then(res=>{\n            if(res.data){\n                const { results } = res.data\n                setresultList(results)\n            }\n        })\n    }\n    //检测总数\n    const handleListTotal = ()=>{\n        getListsTotal().then(res=>{\n            if(res.data){\n                setTotalTest(res.data)\n            }\n        })\n    }\n\n    const changeValue = (e:any)=>{\n        setInputValue(e.target.value)\n        \n    }\n    useEffect(() => {\n        getTestList()\n        handleListTotal()\n      return () => {\n        \n      }\n       // eslint-disable-next-line\n    }, [])\n   \n\n    return <HistoryDom>\n        <div className=\"title\">Triathon Contract Detection Report</div>\n        <div className=\"showTitle\">{TotalTest} Detected</div>\n        <SearchDom>\n            <div className=\"icon\"></div>\n            <InputCon placeholder='search' value={InputValue} onChange={(e:any)=>changeValue(e)} ></InputCon>\n            <div className=\"button\" onClick={()=>getTestList()}>search</div>\n\n        </SearchDom>\n        <div className=\"listCom\">\n            <div className=\"headIntro\">\n                <ItemDiv width='70px' type={0} >#</ItemDiv>\n                <ItemDiv width='340px' type={1}>Name</ItemDiv>\n                <ItemDiv width='240px' type={2}>Contract address</ItemDiv>\n                <ItemDiv width='225px' type={2}>Chain</ItemDiv>\n                <ItemDiv width='225px' type={2}>Detect Score</ItemDiv>\n                <ItemDiv width='194px' type={2}>Operation</ItemDiv>\n            </div>\n            <div className=\"container\">\n                {\n                    resultList.length!==0 ? resultList.map((item, index) => {\n                        return <div className=\"listItems\" key={index}>\n                            <ItemDiv width='70px' type={0} >{index+1}</ItemDiv>\n                            <ItemDiv width='340px' type={1}>{item.file_name}</ItemDiv>\n                            <ItemDiv width='240px' type={2}>{ shortenAddress(item.contract_address) }</ItemDiv>\n                            <ItemDiv width='225px' type={2}> <img src={item.network==='bsc'?bscPic:ethPic} alt=\"\" className='chainImg'/> {item.network}</ItemDiv>\n                            <ItemDiv width='225px' type={2}>{item.score || 0}</ItemDiv>\n                            <ItemDiv width='194px' type={2}>\n                                <img src={Right} alt=\"\" className='rightPoint' onClick={()=>{\n                                    history.push(`/contract_detection/${item.id}`)\n                                }} />\n                            </ItemDiv>\n                        </div>\n                       \n                    }) :<div className='empty'> No Data ~</div>\n                }\n            </div>\n\n        </div>\n        {\n            resultList.length!==0 && <div className=\"footerIntro\">Only Showing 1~100</div>\n        }\n        \n\n    </HistoryDom>\n}"],"sourceRoot":""}